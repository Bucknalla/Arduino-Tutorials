{
  "name": "Arduino-tutorials",
  "tagline": "Warwick University - School of Engineering - Arduino Tutorials",
  "body": "### Welcome to the School of Engineering Arduino Tutorials.\r\nWelcome! This is the associated guidebook for the SoE Arduino Workshops. This guide will walk you through the process of setting up the Arduino IDE as well as teaching you the basics to get you started coding! Throughout these workshops, you will learn about how to interface with sensors such as accelerometers for measuring acceleration and velocity, how to store your data onto an SD card for remote data logging and more. All of these tutorials are maintained by the [Warwick University School of Engineering](https://www2.warwick.ac.uk/fac/sci/eng/)\r\n\r\n### Getting Started\r\nFirst of all, you will want to install the Arduino IDE (Integrated Development Environment). If you are using one of the School's computers you will find that it is already install by navigating to the start menu and searching 'Arduino'. If you are using your own computer, navigate to the [Arduino Download](https://www.arduino.cc/en/Main/Software) page. Select either Windows, Mac OSX or Linux depending on your operating system. \r\n\r\n#### Installing Drivers\r\n\r\nOnce you've installed the Arduino IDE, you'll want to make sure that the drivers have installed correctly and that your Arduino Device is correctly identified. For this introduction, it is assumed that you are using an Arduino Uno. \r\n\r\n***Windows (7/8/10)***\r\n\r\nRun the Arduino IDE (.exe) file you just downloaded. This will install it to your Local Storage.\r\n\r\nPlug your Arduino into your computer and wait for it to recognize it as an external device. If this is the first time you have connected up your Arduino, it will fail.\r\n\r\nNavigate to the Start Menu and search, 'Device Manager'.\r\n\r\nUnder Ports (COM& LPT) you should see an open port named 'Arduino UNO (COMxx)'. Right click on this and it will give you an option to 'Update Driver Software'; Click this. \r\n\r\n\r\n***Mac OSX***\r\n\r\n\r\n\r\n***Linux (Ubuntu)***\r\nPlug in your board and wait for Windows to begin its driver installation process. After a few moments, the process will fail, despite its best efforts.\r\nClick on the Start Menu, and open up the Control Panel.\r\nWhile in the Control Panel, navigate to System and Security. Next, click on System. Once the System window is up, open the Device Manager.\r\nLook under Ports (COM & LPT). You should see an open port named “Arduino UNO (COMxx)”.\r\nRight click on the “Arduino UNO (COMxx)” port and choose the “Update Driver Software” option.\r\nNext, choose the “Browse my computer for Driver software” option.\r\nFinally, navigate to and select the Uno’s driver file, named “ArduinoUNO.inf”, located in the “Drivers” folder of the Arduino Software download.\r\nWindows will finish up the driver installation from there.\r\n\r\n\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}